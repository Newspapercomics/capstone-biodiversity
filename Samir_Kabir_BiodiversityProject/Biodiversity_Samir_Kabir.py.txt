import codecademylib
import pandas as pd
from matplotlib import pyplot as plt
from scipy.stats import chi2_contingency

# Loading the Data
species = pd.read_csv('species_info.csv')

print species.head()

# Inspecting the DataFrame
species_count = len(species)

species_type = species.category.unique()

conservation_statuses = species.conservation_status.unique()

# Analyze Species Conservation Status
conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()

print conservation_counts

# Analyze Species Conservation Status II
species.fillna('No Intervention', inplace = True)

conservation_counts_fixed = species.groupby('conservation_status').scientific_name.nunique().reset_index()

# Plotting Conservation Status by Species
protection_counts = species.groupby('conservation_status')\
    .scientific_name.count().reset_index()\
    .sort_values(by='scientific_name')
    
plt.figure(figsize=(10, 4))
ax = plt.subplot()
plt.bar(range(len(protection_counts)),
        protection_counts.scientific_name.values)
ax.set_xticks(range(len(protection_counts)))
ax.set_xticklabels(protection_counts.conservation_status.values)
plt.ylabel('Number of Species')
plt.title('Conservation Status by Species')
labels = [e.get_text() for e in ax.get_xticklabels()]
print ax.get_title()
plt.show()

species['is_protected'] = species.conservation_status != 'No Intervention'

category_counts = species.groupby(['category', 'is_protected'])\
                         .scientific_name.nunique().reset_index()
  
print category_counts.head()

category_pivot = category_counts.pivot(columns='is_protected', index='category', values='scientific_name').reset_index()

category_pivot.columns = ['category', 'not_protected', 'protected']

category_pivot['percent_protected'] = category_pivot.protected / (category_pivot.protected + category_pivot.not_protected)

print category_pivot

contingency = [[30,146],
              [75,413]]
chi2, pval, dof, expected = chi2_contingency(contingency)
print chi2, pval, dof, expected
pval = 0.687594809666 #not significant
contingency_mr = [[30, 146],
                 [5, 73]]
chi2, pval, dof, expected = chi2_contingency(contingency_mr)
print pval
pval_reptile_mammal = 0.0383555902297 #significant
contingency_plants = [[5, 146],
                     [46, 4216]]
chi2, pval, dof, expected = chi2_contingency(contingency_plants)
print pval
pval_plants = 0.0328051018293 #significant

contingency_fa = [[11, 115],
                 [7, 72]]
chi2, pval, dof, expected=chi2_contingency(contingency_fa)
print pval
pval_fish_amphibians = 0.824794298152 #not significant

contingency_vascular_mammals = [[46,4216],
                              [30, 146]]
chi2, pval, dof, expected=chi2_contingency(contingency_vascular_mammals)
print pval
pval_plants_mammals = 1.44050673099e-55 #significant

contingency_reptiles_vascular = [[46, 4216],
                              [5, 73]]
chi2, pval, dof, expected=chi2_contingency(contingency_reptiles_vascular)
print pval
pval_reptiles_vascular = 0.000145052154947 #significant

contingency_nonvascular_mammals = [[30, 146],
                                  [5, 328]]
chi2, pval, dof, expected=chi2_contingency(contingency_nonvascular_mammals)
print pval

#Sheep Sightings
species = pd.read_csv('species_info.csv')
species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)
sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]

observations = pd.read_csv('observations.csv')

sheep_observations = observations.merge(sheep_species)

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()

plt.figure(figsize=(16,4))
ax = plt.subplot()
ax.bar(range(len(obs_by_park.observations)), obs_by_park.observations)
ax.set_xticks(range(4))
ax.set_xticklabels(obs_by_park.park_name)
ax.set_ylabel('Number of Observations')
ax.set_title('Observations of Sheep per Week')
plt.show()

baseline = 15
minimum_detectable_effect = 33
sample_size_per_variant = 890
yellowstone_weeks_observing = 2
bryce_weeks_observing = 4
